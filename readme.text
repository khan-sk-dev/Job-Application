# My Monolithic Job Application

This repository contains the monolithic version of the Job Application project. 
It is built using Java and Spring Boot. 
The project aims to provide a comprehensive platform for managing job applications, companies, and reviews.

## Table of Contents

- [Features](#features)
- [Technologies Used](#technologies-used)
- [Installation](#installation)
- [Usage](#usage)
- [API Endpoints](#api-endpoints)
- [Contributing](#contributing)

## Features
- CRUD operations for job postings
- CRUD operations for companies
- CRUD operations for job reviews
- Search functionality for job listings

## Technologies Used
- Java
- Spring Boot
- Spring Data JPA
- Hibernate
- MySQL
- Maven

## Installation

1. **Clone the repository:**

    ```sh
    git clone https://github.com/sohaibkhan-007/my-monolithic-Job-application.git
    cd my-monolithic-Job-application
    ```

2. **Set up the database:**

    Create a MySQL database and update the `application.properties` file with your database credentials.

    ```properties
    spring.datasource.url=jdbc:mysql://localhost:3306/your-database
    spring.datasource.username=your-username
    spring.datasource.password=your-password
    spring.jpa.hibernate.ddl-auto=update
    ```

3. **Build and run the application:**

    ```sh
    mvn clean install
    mvn spring-boot:run
    ```

## Usage

- The application will be accessible at `http://localhost:8080`.
- Use tools like Postman to interact with the API endpoints.

## API Endpoints

### Job Endpoints

- **Get all jobs:**
    ```http
    GET /jobs
    ```

- **Get job by ID:**
    ```http
    GET /jobs/{id}
    ```

- **Create a new job:**
    ```http
    POST /jobs
    ```
    ```json
    {
        "title": "Job Title",
        "description": "Job Description",
        "company": "Company Name",
        "location": "Job Location",
        "salary": 50000
    }
    ```

- **Update a job:**
    ```http
    PUT /jobs/{id}
    ```
    ```json
    {
        "title": "Updated Job Title",
        "description": "Updated Job Description",
        "company": "Updated Company Name",
        "location": "Updated Job Location",
        "salary": 60000
    }
    ```

- **Delete a job:**
    ```http
    DELETE /jobs/{id}
    ```

### Company Endpoints

- **Get all companies:**
    ```http
    GET /companies
    ```

- **Get company by ID:**
    ```http
    GET /companies/{id}
    ```

- **Create a new company:**
    ```http
    POST /companies
    ```
    ```json
    {
        "name": "Company Name",
        "location": "Company Location",
        "industry": "Company Industry"
    }
    ```

- **Update a company:**
    ```http
    PUT /companies/{id}
    ```
    ```json
    {
        "name": "Updated Company Name",
        "location": "Updated Company Location",
        "industry": "Updated Company Industry"
    }
    ```

- **Delete a company:**
    ```http
    DELETE /companies/{id}
    ```

### Review Endpoints

- **Get all reviews:**
    ```http
    GET /reviews
    ```

- **Get review by ID:**
    ```http
    GET /reviews/{id}
    ```

- **Create a new review:**
    ```http
    POST /reviews
    ```
    ```json
    {
        "title": "Review Title",
        "description": "Review Description",
        "rating": 4.5,
        "company": {
            "id": 1
        }
    }
    ```

- **Update a review:**
    ```http
    PUT /reviews/{id}
    ```
    ```json
    {
        "title": "Updated Review Title",
        "description": "Updated Review Description",
        "rating": 5,
        "company": {
            "id": 1
        }
    }
    ```

- **Delete a review:**
    ```http
    DELETE /reviews/{id}
    ```

## Contributing

Contributions are welcome! Please create a pull request or open an issue for any improvements or bug fixes.